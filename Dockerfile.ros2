FROM ubuntu:20.04

# Prevent console from interacting with the user
ARG DEBIAN_FRONTEND=noninteractive

# Combine apt-get update and upgrade
RUN apt-get update -yqqq && \
    apt-get upgrade -y --with-new-pkgs

# Install essential packages
RUN apt-get install --no-install-recommends -yqqq \
    apt-utils \
    nano \
    git \
    python3-pip \
    locales \
    software-properties-common \
    curl \
    wget \
    gnupg2 \
    lsb-release \
    terminator \
    build-essential \
    cmake \
    libusb-1.0-0-dev \
    libxinerama-dev \
    libpython3-dev \
    xorg-dev\
    mesa-utils

# Set folder for RUNTIME_DIR. Only to prevent warnings when running RViz2 and Gz
RUN mkdir -p tmp/runtime-root && chmod 0700 tmp/runtime-root
ENV XDG_RUNTIME_DIR='/tmp/runtime-root'

RUN apt-get update -q && \
    apt-get upgrade -yq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends keyboard-configuration language-pack-en && \
    DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends wget curl git build-essential ca-certificates tzdata tmux gnupg2 \
        vim sudo lsb-release locales bash-completion zsh iproute2 iputils-ping net-tools dnsutils && \
    rm -rf /var/lib/apt/lists/*
ENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8
RUN locale-gen en_US.UTF-8
ENV ROS_DISTRO=foxy
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update && \
    apt-get install -y --no-install-recommends ros-${ROS_DISTRO}-desktop && \
    apt-get install -y --no-install-recommends python3-argcomplete python3-colcon-common-extensions python3-rosdep python3-colcon-mixin python3-vcstool && \
    apt-get install -y --no-install-recommends ros-${ROS_DISTRO}-xacro ros-${ROS_DISTRO}-joint-state-publisher-gui ros-${ROS_DISTRO}-joint-state-publisher ros-${ROS_DISTRO}-robot-state-publisher ros-${ROS_DISTRO}-tf-transformations ros-${ROS_DISTRO}-rviz2 && \
    rm -rf /var/lib/apt/lists/*
RUN rosdep init && \
    rosdep update

# Install dependencies for Fast-RTPS and Cyclone DDS
# RUN apt-get install -y libasio-dev libtinyxml2-dev libcunit1-dev libxcb-xinerama0 libx11-xcb1
# Install ROS 2 foxy

RUN apt-get update -yqqq && \
    apt-get install -y locales ros-foxy-navigation2 ros-foxy-nav2-bringup ccache lcov lld  ros-foxy-xacro  ros-foxy-rviz2  ros-foxy-tf-transformations 

#  export DISPLAY=localhost:0

# Upgrade pip and install colcon-common-extensions
RUN pip3 install --no-cache-dir -U pip setuptools colcon-common-extensions



# Install some additional dependencies
# RUN apt-get install -y libflann-dev libvtk6-dev libvtk6-qt-dev libpcap-dev libboost-filesystem-dev libboost-iostreams-dev libboost-system-dev libboost-date-time-dev

# Set up ROS 2 environment
SHELL ["/bin/bash", "-c"]
RUN source /opt/ros/foxy/setup.sh

# Clone navigation2 repository
ARG WORKSPACE=/root/islington_ws
ENV WORKSPACE=$WORKSPACE
RUN mkdir -p $WORKSPACE/src
COPY islington_packages/ $WORKSPACE/src/
COPY new.sh $WORKSPACE/src/

WORKDIR $WORKSPACE/src
RUN chmod +x new.sh

# Build ROS 2 packages
WORKDIR $WORKSPACE/
RUN source /opt/ros/foxy/setup.sh && colcon build
# Update .bashrc
RUN echo "source /opt/ros/foxy/setup.bash" >> /root/.bashrc
RUN echo "source $WORKSPACE/install/setup.bash" >> /root/.bashrc

# ros-foxy-joint-state-publisher ros-foxy-robot-state-publisher